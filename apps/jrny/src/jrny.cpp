#include "util/get_config_path.hpp"
#include <toml++/toml.h>

#include <sys/stat.h>
#include <sys/types.h>

#include <chrono>
#include <ctime>
#include <iostream>
#include <span>

auto does_file_exist(std::string const& p_filename) {
  struct stat buffer;
  return (stat(p_filename.c_str(), &buffer) == 0);
}

auto main(int argc, char const* argv[]) -> int {
  auto args = std::span(argv, static_cast<size_t>(argc));

  // TODO(tybl): Replace hardcoded app name with string generated by cmake
  auto config_path = tybl::util::get_config_path("jrny");
  config_path /= "config.toml";
  if (!does_file_exist(config_path.native())) {
    std::cerr << "Error: " << config_path.native() << " does not exist.\n";
    std::cerr << "Please create a config file.\n";
    return -1;
  }
  auto config = toml::parse_file(config_path.native());

  // TODO(tybl): Start output with the current date/time
  auto now = std::chrono::system_clock::now();
  const std::time_t t_c = std::chrono::system_clock::to_time_t(now);
  std::cout << std::put_time(std::localtime(&t_c), "%F %T:");
  for (auto arg_p : args) {
    std::cout << " " << arg_p;
  }
  std::string filename = config["journal"]["filename"].value_or("");
  std::cout << " > " << filename << std::endl;
  return 0;
}
